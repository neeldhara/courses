{"title":"191014K02 | Day 3 Lecture 1","markdown":{"yaml":{"title":"191014K02 | Day 3 Lecture 1","sidebar":false,"toc":false,"css":["/css/teaching.css","/css/feedback-override.css"]},"headingText":"191014K02: Day 3 Lecture 1","containsRefs":false,"markdown":"\n\n:::{.column-body-outset}\n\n\n_[Back to the Course Page](../../)_\n\n\n{{< bi exclamation-triangle-fill color=\"indianred\" >}} <span style=\"color:indianred;\">Work in progress.</span>\n\n---\n\n### Closest String\n\nFor two strings $s_1, s_2$ of the same length $\\ell$, we define the _Hamming Distance_ between $S_1$ & $S_2$ to be:\n\n$$d\\left(S_1, S_2\\right):=\\left|\\left\\{i: S_1[i] \\neq S_2[i]\\right\\}\\right|$$ \n\nso, for example, $d$(horse, force) $=2$.\n\nFor a string $c$ and set $S$ of stings of length $\\ell$:\n\n$$d(S, c):=\\max _{t \\in S} d(t,c)$$\n\n:::{.callout-tip}\n\n# Closest String [Optimization]\n\nInput: $n$ strings of length $\\ell$ over an alphabet $\\Sigma$^[Note that $|\\Sigma|$ is constant.]\n\nTask: Find center sting $c$ lot length $\\ell$ such that <span style=\"color:indianred;\">$d(S, c)$ is minimized</span>\n\n:::\n\nGOAL: <span style=\"color:darkseagreen;\">$(1+\\varepsilon)$ Approximation Algorithm</span>\n\n#### An Integer Linear Program for Closest String\n\nHave an indicator variable for every position $p$ and every letter $\\alpha \\in \\Sigma$, introduce a binary variable $x_{p,\\alpha}$ with the following semantics:\n\n\\begin{equation*}\n    x_{p,\\alpha} =\n    \\begin{cases}\n      1 & \\text{if } c[p] = \\alpha\\\\\n      0 & \\text{otherwise.}\n    \\end{cases}\n\\end{equation*}\n\nThe constraints:\n\n1. At every position we have one letter:\n\n$$\\forall p \\in [\\ell]: \\sum_{\\alpha \\in \\Sigma} x_{p,\\alpha} = 1$$\n\n2. We control the distance:\n\n    $$\\forall t \\in S: \\quad \\sum_{p=1}^\\ell \\left({\\color{indianred}1-x_{p, t[p]}} \\right) \\leqslant d$$\n\n    ...and ask the ILP to minimize $d$.\n\n:::{.callout-note collapse=\"true\"}\n\n# The distance constraint\n\nNote that:\n\n\n\\begin{equation*}\n    1 - x_{i,s[i]} =\n    \\begin{cases}\n      0 & \\text{if the solution matches with } s[i] \\text{at location } p,\\\\\n      1 & \\text{otherwise.}\n    \\end{cases}\n\\end{equation*}\n\n:::\n\nNow, as usual, relax the ILP and solve the associated LP.\n\n**Rounding.** Think of the OPTLP variable values as \"voting\" for characters at each position. For example, if $\\ell = 5$, $\\Sigma = \\{A,C,G,T\\}$, and the OPTLP values turn out to be:\n\n|   | A   | C   | G    | T    |\n|---|-----|-----|------|------|\n| 1 | **0.9** | 0   | 0.05 | 0.05 |\n| 2 | 0.1 | 0.2 | **0.4**  | 0.3  |\n| 3 | **0.5** | 0.1 | 0.1  | 0.3  |\n| 4 | 0.1 | **0.7** | 0.1  | 0.1  |\n| 5 | 0.2 | 0.2 | 0    | **0.6**  |\n\nThen you might be tempted to \"round\" the solution to `AGACT` because for each position $p \\in [5]$, the letters `A`, `G`, `A`, `C`, and `T` dominate the vote for _that_ position. However: it turns out that this nautral rounding strategy can be arbitrarily bad!\n\nInstead of picking the top choice, what we do instead is the following: for every position $p \\in [\\ell]$, treat the $x_{p,\\alpha}$'s as a probability distribution^[Recall that the first constraint ensures that this is a valid thing to do.] over $\\Sigma$. Now the randomized rounding step involves _sampling_ from this distribution to obtain the solution:\n\n> Set $c[p] = \\alpha$ with probability $x_{p,\\alpha}$.\n\nDefine the indicator random variables $q_{p,\\alpha}$ as indicating for us when $c$ is _different_ from $\\alpha$ at position $p$, as a stepping stone to capturing distance eventually:\n\n\\begin{equation*}\n    q_{p,\\alpha} =\n    \\begin{cases}\n      1 & \\text{if } {\\color{indianred}c[p] \\neq \\alpha},\\\\\n      0 & \\text{otherwise}.\n    \\end{cases}\n\\end{equation*}\n\nThen we have the natural notion of a random variable to capture the distance between the string output by our randomized algorithm and any fixed string $t \\in S$:\n\n$$d[c,t] := \\sum_{p \\in \\ell} q_{p,t[p]}$$\n\nIt's time for our first cool claim. \n\nFix a $t \\in S$. What is $E[d(c,t)]$? \n\nIt turns out: at most $d$, and therefore, at most `OPTLP`, and in turn, at most `OPTILP` = `OPT` {{< bi emoji-sunglasses color=\"darkseagreen\" >}}\n\n\n:::{.callout-note collapse=\"true\"}\n\n# Calculating the Expectation\n\n\\begin{aligned}\nE[d(c,t)] & = \\sum_{p \\in [\\ell]} 1 \\cdot {\\color{indianred}\\operatorname{Pr}[c[p] \\neq t[p]]} + 0 \\cdot \\operatorname{Pr}[c[p] \\neq t[p]] \\\\\n& = \\sum_{p \\in [\\ell]} 1 \\cdot \\left({\\color{indianred}1 - x_{p,t[p]}}\\right) \\\\\n& {\\color{darkseagreen}\\leqslant d},\n\\end{aligned}\n\nwhere the last inequality follows from the second LP constraint.\n\n:::\n\nNote that $d(c,t)$ is a sum of independent 0/1 random variables whose expectation is upper bounded by `OPT`. So our useful Chernoff variation applies here,\n\n\n:::{.callout-important icon=\"false\" collapse=\"true\"}\n# Chernoff Bound: a Useful Variation (recall)\n\nThe: Let $X= X_1 + X_2  \\ldots+ X_n$ where:\n\n- the $X_i$'s take values from $\\{0,1\\}$\n- the $X_i$'s are independent\n\nLet $\\mu_L \\leqslant E[X] \\leqslant \\mu_H$\n\nThen:\n$$\n\\begin{aligned}\n& \\operatorname{Pr}\\left[x-\\mu_H \\geqslant \\varepsilon \\mu_H\\right] \\leqslant e^{-\\varepsilon^2 \\cdot \\mu_H / 3} \\\\\n& \\operatorname{Pr}\\left[\\mu_L-x \\geqslant \\varepsilon \\mu_L\\right] \\leqslant e^{-\\varepsilon^2 \\cdot \\mu_L / 3}\n\\end{aligned}\n$$\n:::\n\nand we get the following:\n\n$$\n\\operatorname{Pr}[d(c,t)-\\text{OPT} > \\varepsilon \\cdot \\text{OPT}] \\leqslant e^{-\\varepsilon^2 \\text{OPT} / 3}.\n$$\n\nNow, applying <span style=\"color:darkseagreen;\">union bound</span> over all $n$ choices of $t \\in S$, we get:\n\n\n$$\n\\operatorname{Pr}[{\\color{darkseagreen}d(c,S)} > (1+\\varepsilon) \\cdot \\text{OPT}] \\leqslant \\frac{{\\color{darkseagreen}n}}{e^{\\varepsilon^2 \\text{OPT} / 3}}.\n$$\n\nSo, if, for example:\n\n$$\\frac{n}{e^{\\varepsilon^2 \\text{OPT} / 3}} \\leqslant \\frac{1}{2},$$\n\nthen it's a win! {{< bi bullseye color=\"olivedrab\" >}}\n\n\n:::{.callout-note collapse=\"true\"}\n\n# What's the bad situation?\n\n\\begin{aligned}\n \\frac{1}{2} & \\leqslant \\frac{n}{e^{\\varepsilon^2 \\text{OPT} / 3}}\\\\\n& ~ \\\\\ne^{\\varepsilon^2 \\text{OPT} / 3} & \\leqslant 2n \\\\\n& ~ \\\\\n\\frac{\\varepsilon^2 \\text{OPT}}{3} & \\leqslant \\ln(2n) \\\\\n& ~ \\\\\n{\\color{indianred}\\text{OPT}} & {\\color{indianred}\\leqslant \\frac{3\\ln(2n)}{\\varepsilon^2}}\n\\end{aligned}\n\n:::\n\nWe _don't_ have a win when `OPT` is really really small, in particular, if:\n\n$$\\text{OPT} \\leqslant \\frac{3\\ln(2n)}{\\varepsilon^2}$$\n\nWe handle this case with a local search algorithm.\n\n`Coming Soon.`\n\n\n:::","srcMarkdownNoYaml":"\n\n:::{.column-body-outset}\n\n## 191014K02: Day 3 Lecture 1\n\n_[Back to the Course Page](../../)_\n\n\n{{< bi exclamation-triangle-fill color=\"indianred\" >}} <span style=\"color:indianred;\">Work in progress.</span>\n\n---\n\n### Closest String\n\nFor two strings $s_1, s_2$ of the same length $\\ell$, we define the _Hamming Distance_ between $S_1$ & $S_2$ to be:\n\n$$d\\left(S_1, S_2\\right):=\\left|\\left\\{i: S_1[i] \\neq S_2[i]\\right\\}\\right|$$ \n\nso, for example, $d$(horse, force) $=2$.\n\nFor a string $c$ and set $S$ of stings of length $\\ell$:\n\n$$d(S, c):=\\max _{t \\in S} d(t,c)$$\n\n:::{.callout-tip}\n\n# Closest String [Optimization]\n\nInput: $n$ strings of length $\\ell$ over an alphabet $\\Sigma$^[Note that $|\\Sigma|$ is constant.]\n\nTask: Find center sting $c$ lot length $\\ell$ such that <span style=\"color:indianred;\">$d(S, c)$ is minimized</span>\n\n:::\n\nGOAL: <span style=\"color:darkseagreen;\">$(1+\\varepsilon)$ Approximation Algorithm</span>\n\n#### An Integer Linear Program for Closest String\n\nHave an indicator variable for every position $p$ and every letter $\\alpha \\in \\Sigma$, introduce a binary variable $x_{p,\\alpha}$ with the following semantics:\n\n\\begin{equation*}\n    x_{p,\\alpha} =\n    \\begin{cases}\n      1 & \\text{if } c[p] = \\alpha\\\\\n      0 & \\text{otherwise.}\n    \\end{cases}\n\\end{equation*}\n\nThe constraints:\n\n1. At every position we have one letter:\n\n$$\\forall p \\in [\\ell]: \\sum_{\\alpha \\in \\Sigma} x_{p,\\alpha} = 1$$\n\n2. We control the distance:\n\n    $$\\forall t \\in S: \\quad \\sum_{p=1}^\\ell \\left({\\color{indianred}1-x_{p, t[p]}} \\right) \\leqslant d$$\n\n    ...and ask the ILP to minimize $d$.\n\n:::{.callout-note collapse=\"true\"}\n\n# The distance constraint\n\nNote that:\n\n\n\\begin{equation*}\n    1 - x_{i,s[i]} =\n    \\begin{cases}\n      0 & \\text{if the solution matches with } s[i] \\text{at location } p,\\\\\n      1 & \\text{otherwise.}\n    \\end{cases}\n\\end{equation*}\n\n:::\n\nNow, as usual, relax the ILP and solve the associated LP.\n\n**Rounding.** Think of the OPTLP variable values as \"voting\" for characters at each position. For example, if $\\ell = 5$, $\\Sigma = \\{A,C,G,T\\}$, and the OPTLP values turn out to be:\n\n|   | A   | C   | G    | T    |\n|---|-----|-----|------|------|\n| 1 | **0.9** | 0   | 0.05 | 0.05 |\n| 2 | 0.1 | 0.2 | **0.4**  | 0.3  |\n| 3 | **0.5** | 0.1 | 0.1  | 0.3  |\n| 4 | 0.1 | **0.7** | 0.1  | 0.1  |\n| 5 | 0.2 | 0.2 | 0    | **0.6**  |\n\nThen you might be tempted to \"round\" the solution to `AGACT` because for each position $p \\in [5]$, the letters `A`, `G`, `A`, `C`, and `T` dominate the vote for _that_ position. However: it turns out that this nautral rounding strategy can be arbitrarily bad!\n\nInstead of picking the top choice, what we do instead is the following: for every position $p \\in [\\ell]$, treat the $x_{p,\\alpha}$'s as a probability distribution^[Recall that the first constraint ensures that this is a valid thing to do.] over $\\Sigma$. Now the randomized rounding step involves _sampling_ from this distribution to obtain the solution:\n\n> Set $c[p] = \\alpha$ with probability $x_{p,\\alpha}$.\n\nDefine the indicator random variables $q_{p,\\alpha}$ as indicating for us when $c$ is _different_ from $\\alpha$ at position $p$, as a stepping stone to capturing distance eventually:\n\n\\begin{equation*}\n    q_{p,\\alpha} =\n    \\begin{cases}\n      1 & \\text{if } {\\color{indianred}c[p] \\neq \\alpha},\\\\\n      0 & \\text{otherwise}.\n    \\end{cases}\n\\end{equation*}\n\nThen we have the natural notion of a random variable to capture the distance between the string output by our randomized algorithm and any fixed string $t \\in S$:\n\n$$d[c,t] := \\sum_{p \\in \\ell} q_{p,t[p]}$$\n\nIt's time for our first cool claim. \n\nFix a $t \\in S$. What is $E[d(c,t)]$? \n\nIt turns out: at most $d$, and therefore, at most `OPTLP`, and in turn, at most `OPTILP` = `OPT` {{< bi emoji-sunglasses color=\"darkseagreen\" >}}\n\n\n:::{.callout-note collapse=\"true\"}\n\n# Calculating the Expectation\n\n\\begin{aligned}\nE[d(c,t)] & = \\sum_{p \\in [\\ell]} 1 \\cdot {\\color{indianred}\\operatorname{Pr}[c[p] \\neq t[p]]} + 0 \\cdot \\operatorname{Pr}[c[p] \\neq t[p]] \\\\\n& = \\sum_{p \\in [\\ell]} 1 \\cdot \\left({\\color{indianred}1 - x_{p,t[p]}}\\right) \\\\\n& {\\color{darkseagreen}\\leqslant d},\n\\end{aligned}\n\nwhere the last inequality follows from the second LP constraint.\n\n:::\n\nNote that $d(c,t)$ is a sum of independent 0/1 random variables whose expectation is upper bounded by `OPT`. So our useful Chernoff variation applies here,\n\n\n:::{.callout-important icon=\"false\" collapse=\"true\"}\n# Chernoff Bound: a Useful Variation (recall)\n\nThe: Let $X= X_1 + X_2  \\ldots+ X_n$ where:\n\n- the $X_i$'s take values from $\\{0,1\\}$\n- the $X_i$'s are independent\n\nLet $\\mu_L \\leqslant E[X] \\leqslant \\mu_H$\n\nThen:\n$$\n\\begin{aligned}\n& \\operatorname{Pr}\\left[x-\\mu_H \\geqslant \\varepsilon \\mu_H\\right] \\leqslant e^{-\\varepsilon^2 \\cdot \\mu_H / 3} \\\\\n& \\operatorname{Pr}\\left[\\mu_L-x \\geqslant \\varepsilon \\mu_L\\right] \\leqslant e^{-\\varepsilon^2 \\cdot \\mu_L / 3}\n\\end{aligned}\n$$\n:::\n\nand we get the following:\n\n$$\n\\operatorname{Pr}[d(c,t)-\\text{OPT} > \\varepsilon \\cdot \\text{OPT}] \\leqslant e^{-\\varepsilon^2 \\text{OPT} / 3}.\n$$\n\nNow, applying <span style=\"color:darkseagreen;\">union bound</span> over all $n$ choices of $t \\in S$, we get:\n\n\n$$\n\\operatorname{Pr}[{\\color{darkseagreen}d(c,S)} > (1+\\varepsilon) \\cdot \\text{OPT}] \\leqslant \\frac{{\\color{darkseagreen}n}}{e^{\\varepsilon^2 \\text{OPT} / 3}}.\n$$\n\nSo, if, for example:\n\n$$\\frac{n}{e^{\\varepsilon^2 \\text{OPT} / 3}} \\leqslant \\frac{1}{2},$$\n\nthen it's a win! {{< bi bullseye color=\"olivedrab\" >}}\n\n\n:::{.callout-note collapse=\"true\"}\n\n# What's the bad situation?\n\n\\begin{aligned}\n \\frac{1}{2} & \\leqslant \\frac{n}{e^{\\varepsilon^2 \\text{OPT} / 3}}\\\\\n& ~ \\\\\ne^{\\varepsilon^2 \\text{OPT} / 3} & \\leqslant 2n \\\\\n& ~ \\\\\n\\frac{\\varepsilon^2 \\text{OPT}}{3} & \\leqslant \\ln(2n) \\\\\n& ~ \\\\\n{\\color{indianred}\\text{OPT}} & {\\color{indianred}\\leqslant \\frac{3\\ln(2n)}{\\varepsilon^2}}\n\\end{aligned}\n\n:::\n\nWe _don't_ have a win when `OPT` is really really small, in particular, if:\n\n$$\\text{OPT} \\leqslant \\frac{3\\ln(2n)}{\\varepsilon^2}$$\n\nWe handle this case with a local search algorithm.\n\n`Coming Soon.`\n\n\n:::"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["fontawesome"],"css":["../../../../styles.css","/css/teaching.css","/css/feedback-override.css"],"toc":false,"include-in-header":[{"text":"<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Berkshire+Swash&family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap\" rel=\"stylesheet\">\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n<script>\nwindow.addEventListener('load', function() {\n  var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')); \n  tooltipTriggerList.forEach(function(element) {\n    new bootstrap.Tooltip(element, {\n      trigger: 'hover',\n      animation: true,\n      delay: { show: 50, hide: 50 }\n    });\n  });\n});\n</script>\n"}],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.40","theme":"cosmo","js":"../../../../scripts.js","page-layout":"full","title":"191014K02 | Day 3 Lecture 1","sidebar":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}