{"markdown":{"yaml":{"dg-publish":true,"dg-path":"2025-CS614-WS01"},"containsRefs":false,"markdown":"\n> [!note]+ Max Coloring: Background\n> \n> In this problem we will study a multi-channel wireless mesh network architecture. Let $V_N$ be the set of mesh routers in a mesh network and $E_N$ be the set of pairs of mesh routers which can communicate directly. Each router is equipped with two network interface cards.  \n>\n> Each router is to be assigned at most two channels, so that every pair of routers that have a direct communication line have a common channel to transmit information on. \n>\n> All our routers have a lot to discuss! So we want to open up as many channels as we can: the more channels we have, the less congestion we expect as network traffic ebbs and flows across these routers.\n>\n> Assume that the mesh network $G := (V_N,E_N)$ is a simple, connected, bipartite, and undirected graph. Let $\\ell$ denote the maximum number of channels that we can feasibly open up given the structure of $G$.\n\n> [!question]- Part 1. OPT and matchings\nSuppose $G$ has a matching on $k$ edges. What can you say about $\\ell$, the optimal solution? Check all true statements.\n>\n> _The claims being made below are to be checked only if they hold for all instances._\n>\n> - $\\ell \\geqslant k$\n> - $\\ell \\geqslant k+1$\n> - $\\ell \\leqslant k$\n> - $\\ell \\leqslant k/2$\n\n> [!question]- Part 2. OPT and vertex cover\n> Suppose $G$ has a [vertex cover](https://en.wikipedia.org/wiki/Vertex_cover) of size at most $t$. What can you say about $\\ell$, the optimal solution? Check all true statements.\n>\n> _The claims being made below are to be checked only if they hold for all instances._\n>\n> - $\\ell \\geqslant t$\n> - $\\ell \\leqslant 2t$\n> - $\\ell \\leqslant t+1$\n> - $\\ell \\leqslant t$\n\n> [!question]- Part 3. A 2-approximation\n> Describe an algorithm that, given $G$ as input, outputs a valid channel assignment with at least $\\ell/2$ channels.\n>\n> _Hint: use the fact that $G$ is bipartite._\n\n> [!note]+ Parallel Universe Job Scheduling\n> \n> We have $n$ jobs $J_1, \\ldots, J_n$, and each job has a two-dimensional duration $\\langle p_i, q_i \\rangle$. We have $m$ machines that exist in two parallel universes $\\mathcal{P}$ and $\\mathcal{Q}$. \n> \n> When a job $J_i$ is executed on any machine, it consumes $p_i$ units of time in $\\mathcal{P}$ and $q_i$ units of time in $\\mathcal{Q}$.\n> \n> Our goal is to assign the jobs to the machines so that the maximum time to completion across both universes is as small as possible. In particular, let $\\sigma: [n] \\rightarrow [m]$ denote a schedule, where $\\sigma(i)$ denotes the machine that $J_i$ is assigned to. Then the two-dimensional makespan of $\\sigma$ is defined as:\n> \n> $\\max_{1 \\leqslant k \\leqslant m} \\left(\\max\\left\\{\\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} p_i, \\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} q_i\\right\\} \\right),$\n> \n> We update $\\sigma$ by assigning $J_t$ to $k^\\star$ and move to the next iteration if $t < n$.\n>\n> and this is what we seek to minimize.\n\n\n> [!question]- Part 1. Greedy Again - I\n> Consider the following greedy approach to this problem: process the jobs in the order they are given; $J_1, \\ldots, J_n$. \n> \n> \n> To begin with, all machines have zero load in both universes and $\\sigma: \\emptyset \\rightarrow [m]$ is the empty assignment.\n> \n> In the $t^{th}$ iteration ($1 \\leqslant t \\leqslant n$), suppose our schedule so far is $\\sigma: [t-1] \\rightarrow [m]$. Consider: \n> \n> \n> \n> $k^\\star := \\argmin_{1 \\leqslant k \\leqslant m} \\left( \\min \\left\\{ \\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} p_i, \\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} q_i \\right\\} \\right),$\n> \n> which is to say, $k^\\star$ is the machine with the lowest load overall; where the load of a machine is interpreted as the smaller of the two loads (between the two universes).\n> \n> We update $\\sigma$ by assigning $J_t$ to $k^\\star$ and move to the next iteration if $t < n$.\n>\n> Is this a $2$-approximation algorithm?\n> \n> - Yes\n> - No\n\n> [!question]- Part 2. Greedy Again - II\n> Consider the following greedy approach to this problem: process the jobs in the order they are given; $J_1, \\ldots, J_n$. \n> \n> \n> To begin with, all machines have zero load in both universes and $\\sigma: \\emptyset \\rightarrow [m]$ is the empty assignment.\n>\n> In the $t^{th}$ iteration ($1 \\leqslant t \\leqslant n$), suppose our schedule so far is $\\sigma: [t-1] \\rightarrow [m]$. Consider: \n>\n> \n> \n> $k^\\star := \\argmin_{1 \\leqslant k \\leqslant m} \\left( \\min \\left\\{ \\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} p_i + \\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} q_i \\right\\} \\right),$\n> \n> which is to say, $k^\\star$ is the machine with the lowest load overall; where the load of a machine is interpreted as the smaller of the two loads (between the two universes).\n> \n> Is this a $2$-approximation algorithm?\n> \n> - Yes\n> - No\n\n> [!question]- Part 3. Do we have $3$-approximations?\n>\n> Which of the following statements is true?\n>\n> - The first algorithm (from Part 1) is a $3$-approximation algorithm for the parallel-universe scheduling problem.\n> - The second algorithm (from Part 2) is a $3$-approximation algorithm for the parallel-universe scheduling problem.","srcMarkdownNoYaml":"\n> [!note]+ Max Coloring: Background\n> \n> In this problem we will study a multi-channel wireless mesh network architecture. Let $V_N$ be the set of mesh routers in a mesh network and $E_N$ be the set of pairs of mesh routers which can communicate directly. Each router is equipped with two network interface cards.  \n>\n> Each router is to be assigned at most two channels, so that every pair of routers that have a direct communication line have a common channel to transmit information on. \n>\n> All our routers have a lot to discuss! So we want to open up as many channels as we can: the more channels we have, the less congestion we expect as network traffic ebbs and flows across these routers.\n>\n> Assume that the mesh network $G := (V_N,E_N)$ is a simple, connected, bipartite, and undirected graph. Let $\\ell$ denote the maximum number of channels that we can feasibly open up given the structure of $G$.\n\n> [!question]- Part 1. OPT and matchings\nSuppose $G$ has a matching on $k$ edges. What can you say about $\\ell$, the optimal solution? Check all true statements.\n>\n> _The claims being made below are to be checked only if they hold for all instances._\n>\n> - $\\ell \\geqslant k$\n> - $\\ell \\geqslant k+1$\n> - $\\ell \\leqslant k$\n> - $\\ell \\leqslant k/2$\n\n> [!question]- Part 2. OPT and vertex cover\n> Suppose $G$ has a [vertex cover](https://en.wikipedia.org/wiki/Vertex_cover) of size at most $t$. What can you say about $\\ell$, the optimal solution? Check all true statements.\n>\n> _The claims being made below are to be checked only if they hold for all instances._\n>\n> - $\\ell \\geqslant t$\n> - $\\ell \\leqslant 2t$\n> - $\\ell \\leqslant t+1$\n> - $\\ell \\leqslant t$\n\n> [!question]- Part 3. A 2-approximation\n> Describe an algorithm that, given $G$ as input, outputs a valid channel assignment with at least $\\ell/2$ channels.\n>\n> _Hint: use the fact that $G$ is bipartite._\n\n> [!note]+ Parallel Universe Job Scheduling\n> \n> We have $n$ jobs $J_1, \\ldots, J_n$, and each job has a two-dimensional duration $\\langle p_i, q_i \\rangle$. We have $m$ machines that exist in two parallel universes $\\mathcal{P}$ and $\\mathcal{Q}$. \n> \n> When a job $J_i$ is executed on any machine, it consumes $p_i$ units of time in $\\mathcal{P}$ and $q_i$ units of time in $\\mathcal{Q}$.\n> \n> Our goal is to assign the jobs to the machines so that the maximum time to completion across both universes is as small as possible. In particular, let $\\sigma: [n] \\rightarrow [m]$ denote a schedule, where $\\sigma(i)$ denotes the machine that $J_i$ is assigned to. Then the two-dimensional makespan of $\\sigma$ is defined as:\n> \n> $\\max_{1 \\leqslant k \\leqslant m} \\left(\\max\\left\\{\\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} p_i, \\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} q_i\\right\\} \\right),$\n> \n> We update $\\sigma$ by assigning $J_t$ to $k^\\star$ and move to the next iteration if $t < n$.\n>\n> and this is what we seek to minimize.\n\n\n> [!question]- Part 1. Greedy Again - I\n> Consider the following greedy approach to this problem: process the jobs in the order they are given; $J_1, \\ldots, J_n$. \n> \n> \n> To begin with, all machines have zero load in both universes and $\\sigma: \\emptyset \\rightarrow [m]$ is the empty assignment.\n> \n> In the $t^{th}$ iteration ($1 \\leqslant t \\leqslant n$), suppose our schedule so far is $\\sigma: [t-1] \\rightarrow [m]$. Consider: \n> \n> \n> \n> $k^\\star := \\argmin_{1 \\leqslant k \\leqslant m} \\left( \\min \\left\\{ \\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} p_i, \\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} q_i \\right\\} \\right),$\n> \n> which is to say, $k^\\star$ is the machine with the lowest load overall; where the load of a machine is interpreted as the smaller of the two loads (between the two universes).\n> \n> We update $\\sigma$ by assigning $J_t$ to $k^\\star$ and move to the next iteration if $t < n$.\n>\n> Is this a $2$-approximation algorithm?\n> \n> - Yes\n> - No\n\n> [!question]- Part 2. Greedy Again - II\n> Consider the following greedy approach to this problem: process the jobs in the order they are given; $J_1, \\ldots, J_n$. \n> \n> \n> To begin with, all machines have zero load in both universes and $\\sigma: \\emptyset \\rightarrow [m]$ is the empty assignment.\n>\n> In the $t^{th}$ iteration ($1 \\leqslant t \\leqslant n$), suppose our schedule so far is $\\sigma: [t-1] \\rightarrow [m]$. Consider: \n>\n> \n> \n> $k^\\star := \\argmin_{1 \\leqslant k \\leqslant m} \\left( \\min \\left\\{ \\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} p_i + \\sum_{\\{i \\in [n] ~|~ \\sigma(i)=k\\}} q_i \\right\\} \\right),$\n> \n> which is to say, $k^\\star$ is the machine with the lowest load overall; where the load of a machine is interpreted as the smaller of the two loads (between the two universes).\n> \n> Is this a $2$-approximation algorithm?\n> \n> - Yes\n> - No\n\n> [!question]- Part 3. Do we have $3$-approximations?\n>\n> Which of the following statements is true?\n>\n> - The first algorithm (from Part 1) is a $3$-approximation algorithm for the parallel-universe scheduling problem.\n> - The second algorithm (from Part 2) is a $3$-approximation algorithm for the parallel-universe scheduling problem."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["fontawesome"],"css":["../../styles.css"],"toc":true,"include-in-header":[{"text":"<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Berkshire+Swash&family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap\" rel=\"stylesheet\">\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n<script>\nwindow.addEventListener('load', function() {\n  var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')); \n  tooltipTriggerList.forEach(function(element) {\n    new bootstrap.Tooltip(element, {\n      trigger: 'hover',\n      animation: true,\n      delay: { show: 50, hide: 50 }\n    });\n  });\n});\n</script>\n"}],"output-file":"W01.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.40","theme":"cosmo","js":"../../scripts.js","page-layout":"full","dg-publish":true,"dg-path":"2025-CS614-WS01"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}